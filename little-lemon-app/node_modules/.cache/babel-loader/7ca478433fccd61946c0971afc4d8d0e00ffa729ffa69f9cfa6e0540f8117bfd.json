{"ast":null,"code":"import jsonData from './available_timeslots.json';\nfunction formatDateToYYYYMMDD(date) {\n  const year = date.getFullYear();\n  const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are zero-based\n  const day = String(date.getDate()).padStart(2, '0');\n  return `${year}-${month}-${day}`;\n}\nexport const fetchAPI = date => {\n  date = formatDateToYYYYMMDD(date); //reformatted to \"yyyy-mm-dd\"\n  let timeslotsArray = [];\n  let dateProcessed = false;\n  jsonData.forEach(dateData => {\n    if (!dateProcessed && dateData.date === date) {\n      dateProcessed = true;\n      timeslotsArray.length = 0;\n      timeslotsArray = dateData.time; //re-assignment to 'availableTimes'\n      timeslotsArray.push(\"===2. Select an available timeslot===\"); //return this final array of timeslots\n      console.log('imeslots array:' + timeslotsArray);\n    }\n  });\n  return timeslotsArray;\n};\nexport const submitAPI = formData => true;\nconst fakeAPI = {\n  fetchAPI: fetchAPI,\n  submitAPI: submitAPI\n};\nexport default fakeAPI;","map":{"version":3,"names":["jsonData","formatDateToYYYYMMDD","date","year","getFullYear","month","String","getMonth","padStart","day","getDate","fetchAPI","timeslotsArray","dateProcessed","forEach","dateData","length","time","push","console","log","submitAPI","formData","fakeAPI"],"sources":["C:/Users/kberl/Downloads/coursera-1/Little Lemon Web App/little-lemon-app/src/components/api.js"],"sourcesContent":["import jsonData from './available_timeslots.json'\r\n\r\n\r\nfunction formatDateToYYYYMMDD(date) {\r\n  const year = date.getFullYear();\r\n  const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are zero-based\r\n  const day = String(date.getDate()).padStart(2, '0');\r\n\r\n  return `${year}-${month}-${day}`;\r\n}\r\n\r\nexport const fetchAPI = (date) => {\r\n  date = formatDateToYYYYMMDD(date); //reformatted to \"yyyy-mm-dd\"\r\n  let timeslotsArray = [];\r\n  let dateProcessed = false;\r\n\r\n  jsonData.forEach((dateData) => {\r\n    if(!dateProcessed && dateData.date === date){\r\n      dateProcessed = true;\r\n      timeslotsArray.length=0;\r\n      timeslotsArray = dateData.time; //re-assignment to 'availableTimes'\r\n      timeslotsArray.push(\"===2. Select an available timeslot===\"); //return this final array of timeslots\r\n      console.log('imeslots array:' + timeslotsArray);\r\n    }\r\n  })\r\n  return timeslotsArray;\r\n};\r\n\r\nexport const submitAPI = formData => true;\r\n\r\nconst fakeAPI = {\r\nfetchAPI: fetchAPI,\r\nsubmitAPI: submitAPI,\r\n}\r\n\r\nexport default fakeAPI; "],"mappings":"AAAA,OAAOA,QAAQ,MAAM,4BAA4B;AAGjD,SAASC,oBAAoBA,CAACC,IAAI,EAAE;EAClC,MAAMC,IAAI,GAAGD,IAAI,CAACE,WAAW,CAAC,CAAC;EAC/B,MAAMC,KAAK,GAAGC,MAAM,CAACJ,IAAI,CAACK,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EAC5D,MAAMC,GAAG,GAAGH,MAAM,CAACJ,IAAI,CAACQ,OAAO,CAAC,CAAC,CAAC,CAACF,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAEnD,OAAQ,GAAEL,IAAK,IAAGE,KAAM,IAAGI,GAAI,EAAC;AAClC;AAEA,OAAO,MAAME,QAAQ,GAAIT,IAAI,IAAK;EAChCA,IAAI,GAAGD,oBAAoB,CAACC,IAAI,CAAC,CAAC,CAAC;EACnC,IAAIU,cAAc,GAAG,EAAE;EACvB,IAAIC,aAAa,GAAG,KAAK;EAEzBb,QAAQ,CAACc,OAAO,CAAEC,QAAQ,IAAK;IAC7B,IAAG,CAACF,aAAa,IAAIE,QAAQ,CAACb,IAAI,KAAKA,IAAI,EAAC;MAC1CW,aAAa,GAAG,IAAI;MACpBD,cAAc,CAACI,MAAM,GAAC,CAAC;MACvBJ,cAAc,GAAGG,QAAQ,CAACE,IAAI,CAAC,CAAC;MAChCL,cAAc,CAACM,IAAI,CAAC,uCAAuC,CAAC,CAAC,CAAC;MAC9DC,OAAO,CAACC,GAAG,CAAC,iBAAiB,GAAGR,cAAc,CAAC;IACjD;EACF,CAAC,CAAC;EACF,OAAOA,cAAc;AACvB,CAAC;AAED,OAAO,MAAMS,SAAS,GAAGC,QAAQ,IAAI,IAAI;AAEzC,MAAMC,OAAO,GAAG;EAChBZ,QAAQ,EAAEA,QAAQ;EAClBU,SAAS,EAAEA;AACX,CAAC;AAED,eAAeE,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}